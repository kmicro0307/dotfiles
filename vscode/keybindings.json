// Place your key bindings in this file to override the defaults
[
    // --------------------------------------------------
    // NERD Tree風
    // --------------------------------------------------
    // サイドバーの表示トグル(サイドバーの表示・非表示)
    {
        "key": "ctrl+j",
        "command": "search.focus.nextInputBox",
        "when": "inputBoxFocus && searchViewletVisible"
    },
    // エクスプローラへ移動
   {
       "key": "ctrl+j w",
       "command": "workbench.view.explorer",
    //    "when": "!explorerViewletVisible && vim.mode != 'Insert' && vim.mode != 'SearchInProgressMode'"
   },
       // エクスプローラから抜けてエディターへ
    {
       "key": "ctrl+w",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "explorerViewletFocus"
    //    "when": "!explorerViewletVisible && vim.mode != 'Insert' && vim.mode != 'SearchInProgressMode'"
   },
    {
        "key": "ctrl+f",
        "command": "workbench.action.findInFiles",
        "when": "!searchInputBoxFocus"
    },
    {
        "key": "ctrl+j g",
        "command": "workbench.action.findInFiles",
        "when": "!searchInputBoxFocus"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "searchInputBoxFocus"
    },
    // サイドバーのトグル
    {
       "key": "ctrl+j shift+w",
       "command": "workbench.action.toggleSidebarVisibility",
       "when": "!searchViewletVisible && !inDebugMode && vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
    },
    {
       "key": "ctrl+shift+h",
       "command": "workbench.action.toggleSidebarVisibility",
    },
    // サイドバーフォーカストグル(サイドバーは表示したまま，フォーカスを切り替え)
    // ,
    // {
    //     "key": "ctrl+h",
    //     "command": "workbench.action.focusFirstEditorGroup",
    //     "when": "!editorFocus"
    // },
    
    // {
    //     "key": "ctrl+k",
    //     "command": "extension.vim_ctrl+k",
    //     "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl && vim.mode != 'Insert'"
    // },
    // ファイルの時は"Enter" or "o"で同一タブで表示
    {
        "key": "Enter",
        "command": "list.select",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "o",
        "command": "list.select",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
    },
    // 
    // フォルダのときは"Enter" or "o"で展開
    {
        "key": "Enter",
        "command": "list.toggleExpand",
        "when": "explorerViewletFocus && explorerViewletVisible && explorerResourceIsFolder && !inputFocus"
    },
    // "s"で別ウィンドウで開く
    {
        "key": "s",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus"
    },
    // --- ファイルシステム系 ---
    // "m + r"でリネーム
    {
        "key": "m r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // "m + c"でコピー
    {
        "key": "m c",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // "m + p"でペースト
    {
        "key": "m p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    ,
    // "m + a"でファイル追加
        "key": "m a",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // "m + d"で削除
    {
        "key": "m d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // "m + f"でフォルダ追加
    {
        "key": "m f",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
      // サイドバーのtoggle
    {
      "key": "ctrl+w shift+h",
      "command": "workbench.action.toggleSidebarVisibility",
      "when": "!explorerViewletFocus"
    },
    // ターミナルのtoggle
    // {
    //     "key": "ctrl+j w",
    //     "command": "workbench.files.action.focusFilesExplorer"
    // },
    //ターミナルのトグル
    { "key": "ctrl+j shift+t",
      "command": "workbench.action.terminal.toggleTerminal",
    },
    { "key": "ctrl+shift+j",
      "command": "workbench.action.terminal.toggleTerminal",
    },
    { "key": "ctrl+j t",
      "command": "workbench.action.terminal.toggleTerminal",
      "when": "terminalFocus"
    },
    // ターミナルへフォーカス
    { "key": "ctrl+oem_3", "command": "workbench.action.terminal.focus" },
    //ターミナルからエディターへフォーカス
    { "key": "ctrl+oem_3",
      "command": "workbench.action.focusActiveEditorGroup",
      "when": "terminalFocus"
    },
    { "key": "ctrl+j t",
      "command": "workbench.action.terminal.focus",
    },
    { "key": "ctrl+oem_3", "command": "workbench.action.terminal.focus" },
    //ターミナルからエディターへフォーカス
    { "key": "ctrl+oem_3",
      "command": "workbench.action.focusActiveEditorGroup",
      "when": "terminalFocus"
    },
    { "key": "ctrl+w",
      "command": "workbench.action.focusActiveEditorGroup",
      "when": "terminalFocus"
    },
    // デバックを表示
    {
      "key": "ctrl+shift+l",
      "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+w j",
        "command": "workbench.action.navigateDown",
        "when": "!explorerViewletFocus && !terminalFocus"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.navigateDown",
        "when": "!explorerViewletFocus && !terminalFocus"
    },
    {
        "key": "ctrl+w k",
        "command": "workbench.action.navigateUp",
        "when": "!explorerViewletFocus"
    }, 
    {
        "key": "ctrl+p",
        "command": "workbench.action.navigateUp",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+w h",
        "command": "workbench.action.navigateLeft",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+w l",
        "command": "workbench.action.navigateRight",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
    },
        // {
        // "key": "ctrl+k",
        // "command": "workbench.action.navigateUp"
    // },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "-cursorColumnSelectRight",
        "when": "textInputFocus"
    },
    {
        "key": "alt+shift+j",
        "command": "workbench.action."
    },
    {
        "key": "alt+shift+l",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "alt+shift+h",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+w k",            
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+Enter",
        "command": "ahk++.run",
        "when": "editorLangId == 'ahk'"
    },
    {
        "key": "ctrl+f9",
        "command": "-ahk++.run",
        "when": "editorLangId == 'ahk'"
    },
    {
        "key": "ctrl+shift+Enter",
        "command": "ahk++.debug",
        "when": "editorLangId == 'ahk'"
    },
    {
        "key": "f9",
        "command": "-ahk++.debug",
        "when": "editorLangId == 'ahk'"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-extension.vim_ctrl+j",
        "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+oem_3",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+Enter",
        "command": "python.execInTerminal",
        "when": "editorLangId == 'python'"
    },
    {
        "key": "shift+f9",
        "command": "-editor.debug.action.toggleInlineBreakpoint",
        "when": "editorTextFocus"
    },
    // {
    //     "key": "ctrl+shift+j",
    //     "command": "extension.node-debug.startWithStopOnEntry",
    //     "when": "!inDebugMode && debugConfigurationType == 'node'"
    // },
    {
        "key": "f10",
        "command": "-extension.node-debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'node'"
    },
    // {
    //     "key": "ctrl+shift+j",
    //     "command": "workbench.action.debug.start",
    //     "when": "debuggersAvailable && !inDebugMode"
    // },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "debuggersAvailable && !inDebugMode"
    },
    {
        "key": "ctrl",
        "command": "workbench.action.toggleMultiCursorModifier"
    },
    // {
    //     "key": "ctrl+j w",
    //     "command": "workbench.files.action.focusOpenEditorsView",
    //     // "when": "workbench.explorer.openEditorsView.active"
    // },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+j f",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+w v",
        "command": "workbench.action.splitEditor",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+w s",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+w v",
        "command": "workbench.action.splitEditorOrthogonal",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+w k",
        "command": "workbench.action.focusAboveGroup",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+x",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+j d",
        "command": "workbench.debug.action.toggleRepl",
        "when": "debuggersAvailable"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "debuggersAvailable"
    },
    {
        "key": "alt+oem_plus",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "alt+oem_minus",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected"
    }
]